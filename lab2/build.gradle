plugins {
    id 'application'
}

group 'org.ajani2001'
version '1.0-SNAPSHOT'
def schemaDir = "src/main/resources"
def xjcOutputDir = "$buildDir/generated/source/xjc/main"

application {
    mainClass = 'org.ajani2001.lab2.Main'
}

repositories {
    mavenCentral()
}

configurations {
    jaxb
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
    implementation 'org.apache.commons:commons-compress:1.21'
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1'
    implementation 'org.postgresql:postgresql:42.3.4'
    runtimeOnly 'org.glassfish.jaxb:jaxb-runtime:3.0.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    jaxb 'org.glassfish.jaxb:jaxb-xjc:3.0.1'
}

task createXjcOutputDir {
    doLast {
        mkdir(xjcOutputDir)
    }
}

task xjc(type: JavaExec) {
    dependsOn(createXjcOutputDir)
    classpath = configurations.jaxb
    mainClass = "com.sun.tools.xjc.XJCFacade"
    args = [
            "-d",
            xjcOutputDir,
            "-p",
            project.group.toString(),
            "-encoding",
            "UTF-8",
            "-no-header",
            "-quiet",
            schemaDir
    ]
}

sourceSets {
    main {
        java {
            srcDirs(
                    files(xjcOutputDir) {
                        builtBy(xjc)
                    }
            )
        }
    }
}

compileJava.dependsOn xjc

test {
    useJUnitPlatform()
}